<!DOCTYPE html>
<html>
<link rel="shortcut icon" href="#">
<link href="/css/styles.css" rel="stylesheet" type="text/css">

<head>
  <title>React week 8</title>
  <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  <!-- Don't use this in production: -->
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>
  <h2>Home</h2>
  <hr />

  <div id="root"></div>
  <div class="home-car">
    <img src="/images/homecar1.png" alt="basic car " width="300">
  </div>
  <script type="text/babel">

    const Cars = (props) => {
  
  const listItems = props.data.map((item) =>
  <li key={item._id} id={item._id} onClick={props.clickHandler}>
    {item.name}
      </li>);
    return <ul>{listItems}</ul>
}
const CarsDetail = (props) => {
return <div>
  <hr/>
  <h3>Car Details</h3>
  <form>
      <p>Name: <input type="text" name="name"  onChange={props.showChange} value={props.item.name|| ""}></input></p>
      <p>Model: <input type="text" name="model" onChange={props.showChange} value={props.item.model || ""}></input></p>
      <p>Year: <input type="text" name="year" onChange={props.showChange} value={props.item.year || ""}></input></p>
      <p>Color: <input type="text" name="color" onChange={props.showChange} value={props.item.color || ""} ></input></p>
  </form>
      <button name="clear" onClick={props.clearForm}>Clear</button>
      <button name="save" onClick={props.saveItem}>Save</button>
      <button name="delete" onClick={props.deleteItem}>Delete</button>
       </div>
}
class CarApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      items: <%- cars %>,
      currentItem: {}
    };
    this.selectItem = this.selectItem.bind(this);
    this.clearForm = this.clearForm.bind(this);
    this.showChange = this.showChange.bind(this);
    this.saveItem = this.saveItem.bind(this);
    this.deleteItem = this.deleteItem.bind(this);
    
    }
   

    saveItem = () => {
      console.log(this.state.currentItem)
      if (this.state.currentItem == {}) return
     
      let newItem = this.state.currentItem;
    

      fetch("/api/add", {
    method: "POST",
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(newItem)

      })
      .then(res => res.json())
      .then((items) => { //update  car list
             
              let newList = this.state.items;
              
              if(!newItem._id){ //if new car, add to list  
                newList.push(newItem);
               
                this.setState({items:newList, currentItem: {} });
                console.log("this is the newItem", newItem);
              }        
              else{ // clear the form 
                  this.setState({currentItem: {} });
              }       
          });

        
        }

        
    deleteItem = () => {
      
      if (this.state.currentItem == {}) return

    let deleteId = this.state.currentItem.name;
     
      let url = "/api/delete/" + deleteId
      fetch(url)
        .then((res) => {
             res.json();
        })
        
        .then((item) => { //update list of cars by removing deleted item
            let newList = this.state.items.filter(item => item.name !== deleteId)
            this.setState({ items: newList, currentItem: {} });
            
           
        })
        this.setState({currentItem: {} });//clear form
       
       
    }

  selectItem = (event) => {
  const found = this.state.items.find((item) => {
    return item.name === event.target.innerText;
  });
  this.setState({currentItem: found})
  
}
 //click event handler
  showDetail = (event) => {
        let  name = event.target.innerText;
        let newItem = this.state.items.find((item) => item.name == name);
        this.setState({currentItem: newItem})
    }
   showChange = (event) => {
     let newItem = this.state.currentItem;
     newItem[event.target.name] = event.target.value;
     this.setState({currentItem: newItem})
   }
   clearForm = () =>
   this.setState({currentItem:{}})
  
  render() {
    return (
      <div><h2>Car List</h2>
        <Cars data={this.state.items} clickHandler={this.showDetail}  />
        <CarsDetail
        item={this.state.currentItem} 
        showChange={this.showChange}
        clearForm={this.clearForm}
        saveItem={this.saveItem}
        deleteItem={this.deleteItem}

    />
  </div> );
  }
}
    ReactDOM.render(
      <div><CarApp /></div>, 
      document.getElementById('root'));
</script>
</body>

</html>