<!DOCTYPE html>
<html>
<link rel="shortcut icon" href="#">
<link href="/css/styles.css" rel="stylesheet" type="text/css">

<head>
  <title>React week 8</title>
  <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  <!-- Don't use this in production: -->
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>

<body>
  <h2>Home</h2>
  <hr />

  <div id="root"></div>
  <script type="text/babel">

    // const cars = <%- cars %>;
    
    const Cars = (props) => {
  
  const listItems = props.data.map((item) =>
  <li key={item._id} id={item._id} onClick={props.clickHandler}>
    {item.name}
    </li>);
    return <ul>{listItems}</ul>
}

const CarsDetail = (props) => {

return <div>
  <hr/>
  <h3>Car Details</h3>
  <form>
      <p>Name: <input type="text" name="name"  onChange={props.showChange} value={props.item.name|| ""}></input></p>
      <p>Model: <input type="text" name="model" onChange={props.showChange} value={props.item.model || ""}></input></p>
      <p>Year: <input type="text" name="year" onChange={props.showChange} value={props.item.year || ""}></input></p>
      <p>Color: <input type="text" name="color" onChange={props.showChange} value={props.item.color || ""} ></input></p>
  </form>
      <button name="clear" onClick={props.clearForm}>Clear</button>
       </div>
}

class CarApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      items: <%- cars %>,
      currentItem: {}
    };
    this.selectItem = this.selectItem.bind(this);
    this.clearForm = this.clearForm.bind(this);//clear still works commented out//
    this.showChange = this.showChange.bind(this);
    }

   
    
  selectItem = (event) => {
  const found = this.state.items.find((item) => {
    return item.name === event.target.innerText;
  });
  this.setState({currentItem: found})
}
 //click event handler
  showDetail = (event) => {
        let  name = event.target.innerText;
        let newItem = this.state.items.find((item) => item.name == name);
        this.setState({"currentItem": newItem})
    }

   showChange = (event) => {
     let newItem = this.state.currentItem;
     newItem[event.target.name] = event.target.value;
     this.setState({currentItem: newItem})

   }

   clearForm = () =>
   this.setState({currentItem:{}})
  
  render() {
    return (
      <div><h2>Car List</h2>
        <Cars data={this.state.items} clickHandler={this.showDetail}  />
        <CarsDetail
        item={this.state.currentItem} 
        showChange={this.showChange}
        clearForm={this.clearForm}
    />
  </div> );
  }
}

    ReactDOM.render(
      <div><CarApp /></div>, 

      document.getElementById('root'));
</script>
</body>

</html>
<!-- // const nameCapitalized = name.charAt(0).toUpperCase() + name.slice(1)

// function capitalizeFirstLetter(string) {
//   return string.charAt(0).toUpperCase() + string.slice(1);
// }

// console.log(capitalizeFirstLetter('foo')); // Foo -->

<!-- <React.StrictMode>
     <CarApp />
</React.StrictMode>, -->